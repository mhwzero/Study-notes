能够写出接口的定义格式
	public interface MyInter {
		//常量
		//抽象方法
		//默认方法
		//静态方法		
	}
能够写出接口的实现格式
	public class MyInterImpl implements MyInter {
		//覆盖重写接口中的所有的抽象方法
		//默认方法: 选择性的覆盖重写,必须去掉default关键字
		//静态方法: 不存在覆盖重写
	}
能够说出接口中的成员特点
	1.抽象方法: 必须只能使用实现类对象调用
	2.默认方法: 必须只能使用实现类对象调用
	3.静态方法: 必须只能使用接口名称调用
	4.常量: 必须只能使用接口名称调用
能够说出多态的前提
	1.必须要有继承/接口实现关系
	2.必须要有父类引用指向子类对象(父类类型的变量保存了子类对象的内存地址)
	3.必须要有方法的覆盖重写
	
能够写出多态的格式	
	Animal a = new Dog();
能够理解多态向上转型和向下转型
	多态就是向上转型: 把子类对象当成父类类型使用
	Animal a = new Dog();
	向下转型:强制类型转换
	if(a instanceof Dog){
		Dog dog = (Dog)a;
	}
	