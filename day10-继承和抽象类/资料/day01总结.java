能够写出类的继承格式
	public class A {}
	public class B extends A {}
能够说出继承的特点
	1.只能单继承
	2.可以多层继承
	3.一个父类可以有任意多个子类
	4.子类可以使用父类的非private修饰和构造方法以外内容
能够区分this和super的作用
	this.变量名: 当前类自己的成员变量,没有找父类
	this.方法名(参数列表...): 当前类自己的成员方法,没有找父类
	this(参数列表...): 当前类自己的其它的构造方法
	
	super.变量名: 父类的成员变量,没有找父类
	super.方法名(参数列表...): 父类的成员方法,没有找父类
	super(参数列表...): 父类的其它的构造方法
	
能够说出方法重写的概念
	继承中 子类方法父类的方法不能满足自己的需求
	子类中重新写了一份方法,方法名称和参数列表和父类方法一模一样
	方法体自己写
	
能够说出方法重写的注意事项
	1.方法名称和参数列表必须和父类保持一模一样
	2.返回值类型可以不同(后面说)
	
能够写出抽象类的格式
	public abstract class 类名 {
		
	}
能够写出抽象方法的格式
	public abstract class 类名 {
		//抽象方法
		public abstract void method();
	}
	
注意:
	1.抽象类也是类,只是多了一种抽象方法的定义
	2.抽象类不能直接new对象
	3.含有抽象方法的类必须定义为抽象类
	4.抽象类中不一定含有抽象方法
	5.子类继承抽象类,如果有抽象方法没有重写,该子类必须定义为对象类
	
	