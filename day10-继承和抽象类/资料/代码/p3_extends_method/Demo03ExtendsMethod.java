package com.itheima.p3_extends_method;
/*
	继承中成员方法的访问特点
        1.子类自己有: 优先使用子类自己的
        2.子类没有: 向上找父类
        3.重名的方法(方法重写): 优先使用子类自己的
    方法重写
        1.概念:
            子类中出现与父类一模一样的方法时（返回值类型，方法名和参数列表都相同），
            会出现覆盖效果，也称为重写或者复写。声明不变，重新实现。
            必要条件:方法名和参数列表必须相同
            可选条件:返回值类型可以不一致(后面讲)
        2.最简单的方法重写形式:
            子类方法声明(定义方法的第一行)和父类方法声明一模一样
        3.@Override注解:用来检测子类方法,是否是对父类方法的覆盖重写
        4.与方法重载区分开:
            方法重载作用:是节约命名空间
            方法重载要求: 方法名称相同,参数列表不同(类型不同,数量不同,多个不同类型的顺序不同)
        5.方法重写快捷键:
            ctrl + o --> 选择要重写的方法 --> ok
*/
public class Demo03ExtendsMethod {
    public static void main(String[] args) {
        Zi03 zi03 = new Zi03();

        //调用成员方法
        zi03.methodZi();//子类自己的
        zi03.methodFu();//父类自己的
        zi03.method();//优先使用子类自己的
        zi03.method(100);//优先使用子类自己的
        zi03.drive();
    }
}
